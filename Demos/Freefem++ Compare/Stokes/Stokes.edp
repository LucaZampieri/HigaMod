///////////////////////////
// DEFINE CLOCK VARIABLE //
///////////////////////////

real s0 = clock();

/////////////////////////////
// CREATE RECTANGULAR MESH //
/////////////////////////////

mesh Th=square(20,20);

////////////////////////////////////////////////////
// GENERATE THE FUNCTIONAL SPACE FOR THE VELOCITY //
////////////////////////////////////////////////////

fespace Xh(Th,P2);
Xh u1,u2,v1,v2;
Xh u3,u4,v3,v4;

//////////////////////////////////////////////////
// DEFINE THE FUNCTIONAL SPACE FOR THE PRESSURE //
//////////////////////////////////////////////////

fespace Mh(Th,P1);
Mh p,q,ppp;
Mh p1,q1,ppp1;

// DEFINE THE COMPONENTS OF THE FORCING TERM

func sigma = 0.0001;
func nu = 1;
func f1 = 0;
func f2 = 0;
func Pinf = 1;
func Pout = 0;

// DEFINTION OF THE STOKES problem

problem Stokes ([u3,u4,p1],[v3,v4,q1],solver=Crout) =
int2d(Th)(
  nu * (dx(u3)*dx(v3))
  + nu * (dy(u3)*dy(v3))
  + nu * (dx(u4)*dx(v4))
  + nu * (dy(u4)*dy(v4))
  + p1 * q1 * sigma
  - p1 * dx(v3)
  - p1 * dy(v4)
  - dx(u3) * q1
  - dy(u4) * q1
  )
+ int2d(Th)(
  - f1 * v3
  - f2 * v4
  )
+ int1d(Th,2)( -Pinf*v3 )
+ int1d(Th,4)( -Pout*v4 )
+ on(1,2,3,4, u4 = 0)
+ on(1,3,u3 = 0);

// SOLUTION OF THE STOKES SOLVER WITH TRADITIONAL SOLVER

Stokes;

// PLOT THE SOLUTION OF THE STOKES PROBLEM WITH TRADITIONAL SOLVER

plot(p1 , ps = "StokesPressure.eps" , value = 1 , wait = 1);
plot(coef = 0.2 , cmm = "Stokes" , p1 , [u3,u4] , ps = "StokesP2P1.eps" , value = 1 , wait = 1);

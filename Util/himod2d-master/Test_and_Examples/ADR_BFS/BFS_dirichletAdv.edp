include "Mesh.edp";


fespace Vh(Th,P1);
Vh u,v,b1,b2;

string dirAdv="./adv/";
ifstream f1(dirAdv+"uh1.sol"); f1>>b1[];
ifstream f2(dirAdv+"uh2.sol"); f2>>b2[];

func uin=y*(1-y)+0*x;
func force = 10.*(((x-1.5)*(x-1.5)+0.4*(y-0.25)*(y-0.25)<0.01)+((x-1.5)*(x-1.5)+0.4*(y-0.75)*(y-0.75)<0.01));

real mu       = 1.;
func beta1=b1;
func beta2=b2;
real sigma  = 0.;
real chi       = 0.;

problem BFS(u,v)=
		   int2d(Th)     ( mu*( dx(u)*dx(v) + dy(u)*dy(v) ) )   // Laplacian operator
		+ int2d(Th)     ( beta1*dx(u)*v )				   // Advection in x direction
		+ int2d(Th)     ( beta2*dy(u)*v )				   // Advection in y direction
		+ int2d(Th)     ( sigma*u*v )				   // Reaction
		+ int1d(Th,1)  ( chi*u*v )					   // Robin Functional
                - int2d(Th)      ( force*v )					   // Force term
		+ on(6,u=uin)							   // Dirichlet Inflow
                + on(1,3,4,5,u=0.0);						   // Dirichlet.
BFS;

// plot contourlines
// real[int] value(21);
// for (int k=0; k<21;k++){
//   value[k]=-0.2+k*0.07;
// }
// plot(Th,u,fill=true,viso=value);
// fine plot contourlines

//out ---> python
string dir="./DirichletAdv/";

include "exportADR.edp"

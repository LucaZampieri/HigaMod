verbosity=0;
real theta=pi/12.;
int N=100;
/*
border down(t=0,6){ x=t; y=-1+x*tan(theta); label=1;};
border right(t=0,1){ x=6; y=-1+6*tan(theta)+t*(2-6*tan(theta)); label=2;};
border up(t=0,6){ x=6-t; y=1; label=3;};
border left(t=-1,1){ x=0; y=-t; label=4;};
*/


mesh Th= square(N*6,N,[6*x,2*y-1]);
Th= movemesh(Th,[x,(x*tan(theta)-1.0)+(y+1.0)/2.0*(2.0-x*tan(theta)) ]);
//plot(Th);
//savemesh(Th,"domain.msh");


fespace Vh(Th,P1);
Vh u,v;
real beta1 =  20.;
real mu    =   1.;
real chi=1;
func f = 10*(  ((x-2)*(x-2)+.4*(y-0.75)*(y-0.75)<0.01) + ((x-1)*(x-1)+.4*(y+0.2)*(y+0.2)<0.01) );

problem shrinking(u,v) = 
		 int2d(Th)   ( mu*( dx(u)*dx(v) + dy(u)*dy(v) ) ) //Laplaciano
		 + int2d(Th) ( beta1*dx(u)*v)                     //Trasporto
         - int2d(Th) (f*v)
         + int1d(Th,1) (chi*u*v)
         + int1d(Th,3) (chi*u*v);

shrinking;

plot(u,value=true, fill=true, nbiso=20);
/*
{
        ofstream file("shrinking.dat"); 
        file << "0 0 0 "<< u[].n << " 0 \n"; 
        for (int j=0;j<u[].n ; j++)
            file << u[][j] << endl;
}
*/
int n=N;
real h=1./n;
real[int] meshx(3*6*n);
for (int i=0;i<6*n;i++)
{	
	meshx[3*i]=i*h;
	meshx[3*i+1]=i*h+h/2.;
	meshx[3*i+2]=i*h+h;
}

{
	ofstream file("DDFF.out");
	file.scientific;
	file.precision(7);
	int i, j;
    int M=60;
    int NN=6*n*3;
	file <<"            "<<NN<<endl;
	file <<"             "<<M<<endl;
    real Xcoord=0.0;
    real Ycoord=0.0;
	for ( int k=1;k<=n*6;k++)
    {
        for (int j=1;j<=M;j++)
        {
            Xcoord=meshx[ (k-1)*3 + 0];
            Ycoord=(Xcoord*tan(theta)-1.0)+(2*(j-1.)/(M-1.)-1+1.0)/2.0*(2.0-Xcoord*tan(theta));
            file<<"       "<<Xcoord<<"       "<<Ycoord<<"       "<<u(Xcoord,Ycoord)<<endl;
        }
        for (int j=1;j<=M;j++)
        {
            Xcoord=meshx[ (k-1)*3 +1];
            Ycoord=(Xcoord*tan(theta)-1.0)+(2*(j-1.)/(M-1.)-1+1.0)/2.0*(2.0-Xcoord*tan(theta));
            file<<"       "<<Xcoord<<"       "<<Ycoord<<"       "<<u(Xcoord,Ycoord)<<endl;
      }
        for (int j=1;j<=M;j++)
        {
            Xcoord=meshx[ (k-1)*3 +2];
            Ycoord=(Xcoord*tan(theta)-1.0)+(2*(j-1.)/(M-1.)-1+1.0)/2.0*(2.0-Xcoord*tan(theta));
            file<<"       "<<Xcoord<<"       "<<Ycoord<<"       "<<u(Xcoord,Ycoord)<<endl;
        }
}
}
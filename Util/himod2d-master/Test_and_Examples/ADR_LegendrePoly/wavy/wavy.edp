verbosity=0;
int n=100;

/*
real d=0.5;
border down(t=0,6){ x=t; y=-d*cos(2.*t)-1.; label=1;};
border right(t=0,1){ x=6; y=-d*cos(12.)-1.+t*(2*d*cos(12.)+2.); label=2;};
border up(t=0,6){ x=6-t; y=d*cos(2.*(6.-t))+1; label=3;};
border left(t=0,1){ x=0; y=1+d-t*(1+d)*2.; label=4;};
mesh Th= buildmesh(down(6*n)+right(n)+up(6*n)+left(n));
*/
mesh Th= square(n*6,n,[6*x,2*y-1]);
Th= movemesh(Th,[x,y+y/2.0*cos(2.0*x)]);
//plot(Th);
//savemesh(Th,"domain.msh");


fespace Vh(Th,P1);
Vh u,v;
real beta1 =  20.;
real beta2 =   0.;
real mu    =   1.;
real chi   =   2.;
real sigma =   0.;
func f = 10*(  ((x-3)*(x-3)+.4*(y-1)*(y-1)<0.01) + ((x-0.5)*(x-0.5)+.4*(y+0.2)*(y+0.2)<0.01) );
//func f = 10*((x-0.5)*(x-0.5)+.4*(y)*(y)<0.05);

problem wavy(u,v) = 
		 int2d(Th)     ( mu*( dx(u)*dx(v) + dy(u)*dy(v) ) ) //Laplaciano
		 + int2d(Th)   ( beta1*dx(u)*v)                     //Trasporto
         + int2d(Th)   ( beta2*dy(u)*v)                     //Trasporto
         - int2d(Th)   (f*v)
         + int1d(Th,1) (chi*u*v)
         + int1d(Th,3) (chi*u*v)
         + int2d(Th)   (sigma*u*v);

wavy;

//plot(u,value=true, fill=true, nbiso=20);
/*
{
        ofstream file("wavy.dat"); 
        file << "0 0 0 "<< u[].n << " 0 \n"; 
        for (int j=0;j<u[].n ; j++)
            file << u[][j] << endl;
}
*/

real h=1./n;
real[int] meshx(3*6*n);
for (int i=0;i<6*n;i++)
{	
	meshx[3*i]=i*h;
	meshx[3*i+1]=i*h+h/2.;
	meshx[3*i+2]=i*h+h;
}

{
	ofstream file("DDFF.out");
	file.scientific;
	file.precision(7);
	int i, j;
    int M=60;
    int NN=6*n*3;
	file <<"            "<<NN<<endl;
	file <<"             "<<M<<endl;
    real Xcoord=0.0;
    real Ycoord=0.0;
    real Yhat=0.0;
	for ( int k=1;k<=n*6;k++)
    {
           
        for (int j=1;j<=M;j++)
        {
            Xcoord=meshx[ (k-1)*3 + 0];
            Yhat=2.*(j-1.)/(M-1.)-1;
            Ycoord=Yhat+Yhat*cos(2.0*Xcoord)/2.0;
            file<<"       "<<Xcoord<<"       "<<Ycoord<<"       "<<u(Xcoord,Ycoord)<<endl;
        }
        for (int j=1;j<=M;j++)
        {
            Xcoord=meshx[ (k-1)*3 +1];
            Yhat=2.*(j-1.)/(M-1.)-1;                        
            Ycoord=Yhat+Yhat*cos(2.0*Xcoord)/2.0;
            file<<"       "<<Xcoord<<"       "<<Ycoord<<"       "<<u(Xcoord,Ycoord)<<endl;
      }
        for (int j=1;j<=M;j++)
        {
            Xcoord=meshx[ (k-1)*3 +2];
            Yhat=2.*(j-1.)/(M-1.)-1;
            Ycoord=Yhat+Yhat*cos(2.0*Xcoord)/2.0;
            file<<"       "<<Xcoord<<"       "<<Ycoord<<"       "<<u(Xcoord,Ycoord)<<endl;
        }
}
}
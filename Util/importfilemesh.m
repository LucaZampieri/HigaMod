%-+--------------------------------------------------------------------
% HiModlab is a general purpose Hierarchical model reduction library.
% Copyright (C) 2006-2017  by the HiMod authors (see authors.txt).
%
% This file is part of the HiModlab library.
%
% The HiModlab library is free software: you can use it, redistribute
% it and/or modify it under the terms of the GNU General Public
% License as published by the Free Software Foundation, either
% version 2 of the License.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program.  If not, see <http://www.gnu.org/licenses/>.
%
% Acknowledgement and Disclaimer
%
% The development of HiModLab was supported by the US National Science
% Foundation (NSF Project, DMS 1419060 ). Any opinions, findings and conclusions
% or recomendations expressed in the source code and documentation are
% those of the authors and do not necessarily reflect the views of the
% National Science Foundation (NSF).
%
%
%
%-+--------------------------------------------------------------------
function [points seg tri] = importfilemesh(fileToRead1)
%IMPORTFILE(FILETOREAD1)
%  Imports data from the specified file
%  FILETOREAD1:  file to read

%  Auto-generated by MATLAB on 28-Feb-2010 18:59:00

% Import the file
rawData1 = importdata(fileToRead1);

% For some simple files (such as a CSV or JPEG files), IMPORTDATA might
% return a simple array.  If so, generate a structure so that the output
% matches that from the Import Wizard.
[unused,name] = fileparts(fileToRead1);
newData1.(genvarname(name)) = rawData1;

% Create new variables in the base workspace from those fields.
vars = fieldnames(newData1);
for i = 1:length(vars)
    assignin('base', vars{i}, newData1.(vars{i}));
end

np=rawData1(1,1);
k=0;
for i=2:np+1
    k=k+1;
points(1,k)=rawData1(i,1);
points(2,k)=rawData1(i,2);
end
% 
% nt=rawData1(1,2);
% k=0;
% 
% for i=np+2:2:np+1+2*nt
% k=k+1;
% tri(1,k)=rawData1(i,1);
% tri(2,k)=rawData1(i,2);
% tri(3,k)=rawData1(i,3);
% tri(4,k)=rawData1(i+1,1);
% end
% 
% k=0;
% for i=1:nt
%     k=k+1;
%     lecseg(k,1)=tri(1,i);
%     lecseg(k,2)=tri(2,i);
%     k=k+1;
%     lecseg(k,1)=tri(2,i);
%     lecseg(k,2)=tri(3,i);
%     k=k+1;
%     lecseg(k,1)=tri(3,i);
%     lecseg(k,2)=tri(1,i);
%     
% end
% 
% nlecseg=k;
% 
% k=0;
% for i=1:nlecseg
%     sw=0;
%     for j=1:i-1
%         if((lecseg(i,1)==lecseg(j,1) && lecseg(i,2)==lecseg(j,2)) || (lecseg(i,1)==lecseg(j,2) && lecseg(i,2)==lecseg(j,1)))
%             sw=1;
%         end
%     end
%     if(sw<1)
%         k=k+1;
%         seg(1,k)=lecseg(i,1);
%         seg(2,k)=lecseg(i,2);
%         seg(3,k)=0;
%         seg(4,k)=1;
%         seg(5,k)=k;
%         seg(6,k)=1;
%         seg(7,k)=0;
% 
%         
%     end
% end
% 
% nseg=k;
% 
seg=NaN; tri=NaN;